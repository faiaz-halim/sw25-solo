version: '3.8'

services:
  # Backend API service
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./saves:/app/saves
      - ./.env:/app/.env
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - DATABASE_URL=postgresql://swordworld:swordworld@postgres:5432/swordworld
    depends_on:
      - redis
      - postgres
    networks:
      - app-network

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=swordworld
      - POSTGRES_USER=swordworld
      - POSTGRES_PASSWORD=swordworld
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Nginx web server for frontend
  web:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./web:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
